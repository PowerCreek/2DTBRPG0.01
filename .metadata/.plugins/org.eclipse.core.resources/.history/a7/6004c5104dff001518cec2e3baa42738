package com.mygdx.game;

import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.utils.viewport.FitViewport;
import com.badlogic.gdx.utils.viewport.Viewport;
import com.mygdx.game.pFunctional.Input;
import com.mygdx.game.pFunctional.RunGame;

public class MyGdxGame extends ApplicationAdapter {
	SpriteBatch batch;
	BitmapFont bf;
	RunGame RG = new RunGame();
	Input input = new Input();
	
	OrthographicCamera cam;
	Viewport viewport;
	@Override
	public void create () {
		cam = new OrthographicCamera(1280,720);
		viewport = new FitViewport(800,800,cam);
		RG.init();
		batch = new SpriteBatch();
		this.bf = new BitmapFont();
		input.apply();
		
	}

	public void update(){
		int width = 1280;
		int height = 720;
		RG.screen.set(0,-(Gdx.graphics.getWidth()-width));
		RG.screen.set(1,height);		
		
		//viewport = new FitViewport(width,height,cam);
		viewport.update(width, height,true);
	}
	
	@Override
	public void render () {
		update();
		Gdx.gl.glClearColor(1, 0, 0, 1);
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		batch.setProjectionMatrix(cam.combined);
		
		batch.begin();
		RG.render(batch,bf,input);
		batch.end();
	}
}
